quit
@movie[0].director
@movie.director
@movie
q
t
p
n
quit
Movie.where(director:'hello')
Movie.where(director: hello)
Movie.where(director: hello))
Movie.find_all_by_director('hello')
Movie.find_by_director('hello')
@movie
Movie.find_by_director(@movie.title)
Movie.find_by_director(@movie.director)
Movie.find_by_director
Movie.find_by_director hello
Movie
@movie
movie
@Movie.all
params
quit
movie-path
current_path
quit
path
current_path
show_movie_path
movie_path(movie.id, movie.director)
movie_path(movie.id)/eval('movie.director')
movie_path(movie.id)/eval('movie.director'_
movie_path(movie.id)/#{movie.director}
movie_path(movie.id)/movie.director
movie_path(movie.id)
movie_path(movie.id, movie.director)
movie_path
same_director_movie_path
visit 'movied'
movied = movie.director
visit '/#{movie.director}'
visit '/#{momovie.director}'
visit '/movie.director'
visit 'movie.director'
visit 'movies/movie.id/movie.director'
visit 'movies/#{movie.id}/#{movie.director}'
movie.director
movie
quit
exit
n
n)
path_to(details)
paths
current_path == path_to("similar page")
current_path
page.should
page.public-methods
page.singleton_methods
page.methods
page.path
page.id
page.name
page.respond_to? should
current_path.respond_to? should
current_page.respond_to? should
current_path.methods
current_path.instance_of?
current_path.instance_method
current_path.instance_methods
current_path
q
e
exit
n
movie_path(1)
movie_path
path_to(page_name)
movie.id
movie
movie_name
